/**
 * AWSECommerceServiceLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of OfferListing
 *
 * @constructor
 */
angular.module('AWSECommerceServiceLib')
    .factory('OfferListing', ['BaseModel', OfferListingModel]);

    function OfferListingModel(BaseModel) {
        var OfferListing = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.offerListingId = this.getValue(obj.offerListingId);
            this.pricePerUnit = this.getValue(obj.pricePerUnit);
            this.price = this.getValue(obj.price);
            this.salePrice = this.getValue(obj.salePrice);
            this.amountSaved = this.getValue(obj.amountSaved);
            this.percentageSaved = this.getValue(obj.percentageSaved);
            this.availability = this.getValue(obj.availability);
            this.availabilityAttributes = this.getValue(obj.availabilityAttributes);
            this.isEligibleForSuperSaverShipping = this.getValue(obj.isEligibleForSuperSaverShipping);
            this.isEligibleForPrimeFreeDigitalVideo = this.getValue(obj.isEligibleForPrimeFreeDigitalVideo);
            this.isEligibleForPrime = this.getValue(obj.isEligibleForPrime);
        };

        OfferListing.prototype = new BaseModel();
        OfferListing.prototype.constructor = OfferListing;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        OfferListing.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                { name: 'offerListingId', realName: 'OfferListingId' },
                { name: 'pricePerUnit', realName: 'PricePerUnit' },
                { name: 'price', realName: 'Price', type: 'Price' },
                { name: 'salePrice', realName: 'SalePrice', type: 'Price' },
                { name: 'amountSaved', realName: 'AmountSaved', type: 'Price' },
                { name: 'percentageSaved', realName: 'PercentageSaved' },
                { name: 'availability', realName: 'Availability' },
                { name: 'availabilityAttributes', realName: 'AvailabilityAttributes', type: 'AvailabilityAttributes' },
                { name: 'isEligibleForSuperSaverShipping', realName: 'IsEligibleForSuperSaverShipping' },
                { name: 'isEligibleForPrimeFreeDigitalVideo', realName: 'IsEligibleForPrimeFreeDigitalVideo' },
                { name: 'isEligibleForPrime', realName: 'IsEligibleForPrime' }
            ]);
        };
    
        /**
         * Function containing information about discriminator values
         * mapped with their corresponding model class names
         *
         * @return   {object}  Object containing Key-Value pairs mapping discriminator
         *                     values with their corresponding model classes
         */
        OfferListing.prototype.discriminatorMap = function() {
            return {};
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        OfferListing.prototype.getOfferListingId = function () {
            return this.offerListingId;
        };
    
        /**
         * Setter for OfferListingId
         * 
         * @param {string|null} value 
         */
        OfferListing.prototype.setOfferListingId = function (value) {
            this.offerListingId = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        OfferListing.prototype.getPricePerUnit = function () {
            return this.pricePerUnit;
        };
    
        /**
         * Setter for PricePerUnit
         * 
         * @param {string|null} value 
         */
        OfferListing.prototype.setPricePerUnit = function (value) {
            this.pricePerUnit = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {Price|null}
         */
        OfferListing.prototype.getPrice = function () {
            return this.price;
        };
    
        /**
         * Setter for Price
         * 
         * @param {Price|null} value 
         */
        OfferListing.prototype.setPrice = function (value) {
            this.price = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {Price|null}
         */
        OfferListing.prototype.getSalePrice = function () {
            return this.salePrice;
        };
    
        /**
         * Setter for SalePrice
         * 
         * @param {Price|null} value 
         */
        OfferListing.prototype.setSalePrice = function (value) {
            this.salePrice = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {Price|null}
         */
        OfferListing.prototype.getAmountSaved = function () {
            return this.amountSaved;
        };
    
        /**
         * Setter for AmountSaved
         * 
         * @param {Price|null} value 
         */
        OfferListing.prototype.setAmountSaved = function (value) {
            this.amountSaved = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int|null}
         */
        OfferListing.prototype.getPercentageSaved = function () {
            return this.percentageSaved;
        };
    
        /**
         * Setter for PercentageSaved
         * 
         * @param {int|null} value 
         */
        OfferListing.prototype.setPercentageSaved = function (value) {
            this.percentageSaved = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        OfferListing.prototype.getAvailability = function () {
            return this.availability;
        };
    
        /**
         * Setter for Availability
         * 
         * @param {string|null} value 
         */
        OfferListing.prototype.setAvailability = function (value) {
            this.availability = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {AvailabilityAttributes|null}
         */
        OfferListing.prototype.getAvailabilityAttributes = function () {
            return this.availabilityAttributes;
        };
    
        /**
         * Setter for AvailabilityAttributes
         * 
         * @param {AvailabilityAttributes|null} value 
         */
        OfferListing.prototype.setAvailabilityAttributes = function (value) {
            this.availabilityAttributes = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {bool|null}
         */
        OfferListing.prototype.getIsEligibleForSuperSaverShipping = function () {
            return this.isEligibleForSuperSaverShipping;
        };
    
        /**
         * Setter for IsEligibleForSuperSaverShipping
         * 
         * @param {bool|null} value 
         */
        OfferListing.prototype.setIsEligibleForSuperSaverShipping = function (value) {
            this.isEligibleForSuperSaverShipping = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {bool|null}
         */
        OfferListing.prototype.getIsEligibleForPrimeFreeDigitalVideo = function () {
            return this.isEligibleForPrimeFreeDigitalVideo;
        };
    
        /**
         * Setter for IsEligibleForPrimeFreeDigitalVideo
         * 
         * @param {bool|null} value 
         */
        OfferListing.prototype.setIsEligibleForPrimeFreeDigitalVideo = function (value) {
            this.isEligibleForPrimeFreeDigitalVideo = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {bool|null}
         */
        OfferListing.prototype.getIsEligibleForPrime = function () {
            return this.isEligibleForPrime;
        };
    
        /**
         * Setter for IsEligibleForPrime
         * 
         * @param {bool|null} value 
         */
        OfferListing.prototype.setIsEligibleForPrime = function (value) {
            this.isEligibleForPrime = value;
        };
    
        return OfferListing;
    }

}(angular));
