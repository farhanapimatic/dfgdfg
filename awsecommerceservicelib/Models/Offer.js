/**
 * AWSECommerceServiceLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of Offer
 *
 * @constructor
 */
angular.module('AWSECommerceServiceLib')
    .factory('Offer', ['BaseModel', OfferModel]);

    function OfferModel(BaseModel) {
        var Offer = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.merchant = this.getValue(obj.merchant);
            this.offerAttributes = this.getValue(obj.offerAttributes);
            this.offerListing = this.getValue(obj.offerListing);
            this.loyaltyPoints = this.getValue(obj.loyaltyPoints);
            this.promotions = this.getValue(obj.promotions);
        };

        Offer.prototype = new BaseModel();
        Offer.prototype.constructor = Offer;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        Offer.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                { name: 'merchant', realName: 'Merchant', type: 'Merchant' },
                { name: 'offerAttributes', realName: 'OfferAttributes', type: 'OfferAttributes' },
                { name: 'offerListing', realName: 'OfferListing', array: true, type: 'OfferListing' },
                { name: 'loyaltyPoints', realName: 'LoyaltyPoints', type: 'LoyaltyPoints' },
                { name: 'promotions', realName: 'Promotions', type: 'Promotions' }
            ]);
        };
    
        /**
         * Function containing information about discriminator values
         * mapped with their corresponding model class names
         *
         * @return   {object}  Object containing Key-Value pairs mapping discriminator
         *                     values with their corresponding model classes
         */
        Offer.prototype.discriminatorMap = function() {
            return {};
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {Merchant|null}
         */
        Offer.prototype.getMerchant = function () {
            return this.merchant;
        };
    
        /**
         * Setter for Merchant
         * 
         * @param {Merchant|null} value 
         */
        Offer.prototype.setMerchant = function (value) {
            this.merchant = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {OfferAttributes|null}
         */
        Offer.prototype.getOfferAttributes = function () {
            return this.offerAttributes;
        };
    
        /**
         * Setter for OfferAttributes
         * 
         * @param {OfferAttributes|null} value 
         */
        Offer.prototype.setOfferAttributes = function (value) {
            this.offerAttributes = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {array|null}
         */
        Offer.prototype.getOfferListing = function () {
            return this.offerListing;
        };
    
        /**
         * Setter for OfferListing
         * 
         * @param {array|null} value 
         */
        Offer.prototype.setOfferListing = function (value) {
            this.offerListing = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {LoyaltyPoints|null}
         */
        Offer.prototype.getLoyaltyPoints = function () {
            return this.loyaltyPoints;
        };
    
        /**
         * Setter for LoyaltyPoints
         * 
         * @param {LoyaltyPoints|null} value 
         */
        Offer.prototype.setLoyaltyPoints = function (value) {
            this.loyaltyPoints = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {Promotions|null}
         */
        Offer.prototype.getPromotions = function () {
            return this.promotions;
        };
    
        /**
         * Setter for Promotions
         * 
         * @param {Promotions|null} value 
         */
        Offer.prototype.setPromotions = function (value) {
            this.promotions = value;
        };
    
        return Offer;
    }

}(angular));
