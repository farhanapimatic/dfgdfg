/**
 * AWSECommerceServiceLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of AvailabilityAttributes
 *
 * @constructor
 */
angular.module('AWSECommerceServiceLib')
    .factory('AvailabilityAttributes', ['BaseModel', AvailabilityAttributesModel]);

    function AvailabilityAttributesModel(BaseModel) {
        var AvailabilityAttributes = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.availabilityType = this.getValue(obj.availabilityType);
            this.isPreorder = this.getValue(obj.isPreorder);
            this.minimumHours = this.getValue(obj.minimumHours);
            this.maximumHours = this.getValue(obj.maximumHours);
        };

        AvailabilityAttributes.prototype = new BaseModel();
        AvailabilityAttributes.prototype.constructor = AvailabilityAttributes;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        AvailabilityAttributes.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                { name: 'availabilityType', realName: 'AvailabilityType' },
                { name: 'isPreorder', realName: 'IsPreorder' },
                { name: 'minimumHours', realName: 'MinimumHours' },
                { name: 'maximumHours', realName: 'MaximumHours' }
            ]);
        };
    
        /**
         * Function containing information about discriminator values
         * mapped with their corresponding model class names
         *
         * @return   {object}  Object containing Key-Value pairs mapping discriminator
         *                     values with their corresponding model classes
         */
        AvailabilityAttributes.prototype.discriminatorMap = function() {
            return {};
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        AvailabilityAttributes.prototype.getAvailabilityType = function () {
            return this.availabilityType;
        };
    
        /**
         * Setter for AvailabilityType
         * 
         * @param {string|null} value 
         */
        AvailabilityAttributes.prototype.setAvailabilityType = function (value) {
            this.availabilityType = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {bool|null}
         */
        AvailabilityAttributes.prototype.getIsPreorder = function () {
            return this.isPreorder;
        };
    
        /**
         * Setter for IsPreorder
         * 
         * @param {bool|null} value 
         */
        AvailabilityAttributes.prototype.setIsPreorder = function (value) {
            this.isPreorder = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int|null}
         */
        AvailabilityAttributes.prototype.getMinimumHours = function () {
            return this.minimumHours;
        };
    
        /**
         * Setter for MinimumHours
         * 
         * @param {int|null} value 
         */
        AvailabilityAttributes.prototype.setMinimumHours = function (value) {
            this.minimumHours = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int|null}
         */
        AvailabilityAttributes.prototype.getMaximumHours = function () {
            return this.maximumHours;
        };
    
        /**
         * Setter for MaximumHours
         * 
         * @param {int|null} value 
         */
        AvailabilityAttributes.prototype.setMaximumHours = function (value) {
            this.maximumHours = value;
        };
    
        return AvailabilityAttributes;
    }

}(angular));
