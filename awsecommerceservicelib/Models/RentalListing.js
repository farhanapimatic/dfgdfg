/**
 * AWSECommerceServiceLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of RentalListing
 *
 * @constructor
 */
angular.module('AWSECommerceServiceLib')
    .factory('RentalListing', ['BaseModel', RentalListingModel]);

    function RentalListingModel(BaseModel) {
        var RentalListing = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.price = this.getValue(obj.price);
            this.period = this.getValue(obj.period);
            this.isFulfilledByAmazon = this.getValue(obj.isFulfilledByAmazon);
            this.disclaimer = this.getValue(obj.disclaimer);
        };

        RentalListing.prototype = new BaseModel();
        RentalListing.prototype.constructor = RentalListing;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        RentalListing.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                { name: 'price', realName: 'Price', type: 'Price' },
                { name: 'period', realName: 'Period', type: 'NonNegativeIntegerWithUnits' },
                { name: 'isFulfilledByAmazon', realName: 'IsFulfilledByAmazon' },
                { name: 'disclaimer', realName: 'Disclaimer' }
            ]);
        };
    
        /**
         * Function containing information about discriminator values
         * mapped with their corresponding model class names
         *
         * @return   {object}  Object containing Key-Value pairs mapping discriminator
         *                     values with their corresponding model classes
         */
        RentalListing.prototype.discriminatorMap = function() {
            return {};
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {Price|null}
         */
        RentalListing.prototype.getPrice = function () {
            return this.price;
        };
    
        /**
         * Setter for Price
         * 
         * @param {Price|null} value 
         */
        RentalListing.prototype.setPrice = function (value) {
            this.price = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {NonNegativeIntegerWithUnits|null}
         */
        RentalListing.prototype.getPeriod = function () {
            return this.period;
        };
    
        /**
         * Setter for Period
         * 
         * @param {NonNegativeIntegerWithUnits|null} value 
         */
        RentalListing.prototype.setPeriod = function (value) {
            this.period = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {bool|null}
         */
        RentalListing.prototype.getIsFulfilledByAmazon = function () {
            return this.isFulfilledByAmazon;
        };
    
        /**
         * Setter for IsFulfilledByAmazon
         * 
         * @param {bool|null} value 
         */
        RentalListing.prototype.setIsFulfilledByAmazon = function (value) {
            this.isFulfilledByAmazon = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        RentalListing.prototype.getDisclaimer = function () {
            return this.disclaimer;
        };
    
        /**
         * Setter for Disclaimer
         * 
         * @param {string|null} value 
         */
        RentalListing.prototype.setDisclaimer = function (value) {
            this.disclaimer = value;
        };
    
        return RentalListing;
    }

}(angular));
