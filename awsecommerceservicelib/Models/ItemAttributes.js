/**
 * AWSECommerceServiceLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of ItemAttributes
 *
 * @constructor
 */
angular.module('AWSECommerceServiceLib')
    .factory('ItemAttributes', ['BaseModel', ItemAttributesModel]);

    function ItemAttributesModel(BaseModel) {
        var ItemAttributes = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.actor = this.getValue(obj.actor);
            this.artist = this.getValue(obj.artist);
            this.aspectRatio = this.getValue(obj.aspectRatio);
            this.audienceRating = this.getValue(obj.audienceRating);
            this.audioFormat = this.getValue(obj.audioFormat);
            this.author = this.getValue(obj.author);
            this.binding = this.getValue(obj.binding);
            this.brand = this.getValue(obj.brand);
            this.catalogNumberList = this.getValue(obj.catalogNumberList);
            this.category = this.getValue(obj.category);
            this.cEROAgeRating = this.getValue(obj.cEROAgeRating);
            this.clothingSize = this.getValue(obj.clothingSize);
            this.color = this.getValue(obj.color);
            this.creator = this.getValue(obj.creator);
            this.department = this.getValue(obj.department);
            this.director = this.getValue(obj.director);
            this.eAN = this.getValue(obj.eAN);
            this.eANList = this.getValue(obj.eANList);
            this.edition = this.getValue(obj.edition);
            this.eISBN = this.getValue(obj.eISBN);
            this.energyEfficiencyClass = this.getValue(obj.energyEfficiencyClass);
            this.episodeSequence = this.getValue(obj.episodeSequence);
            this.eSRBAgeRating = this.getValue(obj.eSRBAgeRating);
            this.feature = this.getValue(obj.feature);
            this.format = this.getValue(obj.format);
            this.genre = this.getValue(obj.genre);
            this.hardwarePlatform = this.getValue(obj.hardwarePlatform);
            this.hazardousMaterialType = this.getValue(obj.hazardousMaterialType);
            this.isAdultProduct = this.getValue(obj.isAdultProduct);
            this.isAutographed = this.getValue(obj.isAutographed);
            this.iSBN = this.getValue(obj.iSBN);
            this.isEligibleForTradeIn = this.getValue(obj.isEligibleForTradeIn);
            this.isMemorabilia = this.getValue(obj.isMemorabilia);
            this.issuesPerYear = this.getValue(obj.issuesPerYear);
            this.itemDimensions = this.getValue(obj.itemDimensions);
            this.itemPartNumber = this.getValue(obj.itemPartNumber);
            this.label = this.getValue(obj.label);
            this.languages = this.getValue(obj.languages);
            this.legalDisclaimer = this.getValue(obj.legalDisclaimer);
            this.listPrice = this.getValue(obj.listPrice);
            this.magazineType = this.getValue(obj.magazineType);
            this.manufacturer = this.getValue(obj.manufacturer);
            this.manufacturerMaximumAge = this.getValue(obj.manufacturerMaximumAge);
            this.manufacturerMinimumAge = this.getValue(obj.manufacturerMinimumAge);
            this.manufacturerPartsWarrantyDescription = this.getValue(obj.manufacturerPartsWarrantyDescription);
            this.mediaType = this.getValue(obj.mediaType);
            this.model = this.getValue(obj.model);
            this.modelYear = this.getValue(obj.modelYear);
            this.mPN = this.getValue(obj.mPN);
            this.numberOfDiscs = this.getValue(obj.numberOfDiscs);
            this.numberOfIssues = this.getValue(obj.numberOfIssues);
            this.numberOfItems = this.getValue(obj.numberOfItems);
            this.numberOfPages = this.getValue(obj.numberOfPages);
            this.numberOfTracks = this.getValue(obj.numberOfTracks);
            this.operatingSystem = this.getValue(obj.operatingSystem);
            this.packageDimensions = this.getValue(obj.packageDimensions);
            this.packageQuantity = this.getValue(obj.packageQuantity);
            this.partNumber = this.getValue(obj.partNumber);
            this.pictureFormat = this.getValue(obj.pictureFormat);
            this.platform = this.getValue(obj.platform);
            this.productGroup = this.getValue(obj.productGroup);
            this.productTypeName = this.getValue(obj.productTypeName);
            this.productTypeSubcategory = this.getValue(obj.productTypeSubcategory);
            this.publicationDate = this.getValue(obj.publicationDate);
            this.publisher = this.getValue(obj.publisher);
            this.regionCode = this.getValue(obj.regionCode);
            this.releaseDate = this.getValue(obj.releaseDate);
            this.seasonSequence = this.getValue(obj.seasonSequence);
            this.runningTime = this.getValue(obj.runningTime);
            this.seikodoProductCode = this.getValue(obj.seikodoProductCode);
            this.size = this.getValue(obj.size);
            this.sKU = this.getValue(obj.sKU);
            this.studio = this.getValue(obj.studio);
            this.subscriptionLength = this.getValue(obj.subscriptionLength);
            this.title = this.getValue(obj.title);
            this.trackSequence = this.getValue(obj.trackSequence);
            this.tradeInValue = this.getValue(obj.tradeInValue);
            this.uPC = this.getValue(obj.uPC);
            this.uPCList = this.getValue(obj.uPCList);
            this.warranty = this.getValue(obj.warranty);
            this.wEEETaxValue = this.getValue(obj.wEEETaxValue);
        };

        ItemAttributes.prototype = new BaseModel();
        ItemAttributes.prototype.constructor = ItemAttributes;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        ItemAttributes.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                { name: 'actor', realName: 'Actor', array: true },
                { name: 'artist', realName: 'Artist', array: true },
                { name: 'aspectRatio', realName: 'AspectRatio' },
                { name: 'audienceRating', realName: 'AudienceRating' },
                { name: 'audioFormat', realName: 'AudioFormat', array: true },
                { name: 'author', realName: 'Author', array: true },
                { name: 'binding', realName: 'Binding' },
                { name: 'brand', realName: 'Brand' },
                { name: 'catalogNumberList', realName: 'CatalogNumberList', type: 'CatalogNumberList' },
                { name: 'category', realName: 'Category', array: true },
                { name: 'cEROAgeRating', realName: 'CEROAgeRating' },
                { name: 'clothingSize', realName: 'ClothingSize' },
                { name: 'color', realName: 'Color' },
                { name: 'creator', realName: 'Creator', array: true, type: 'Creator' },
                { name: 'department', realName: 'Department' },
                { name: 'director', realName: 'Director', array: true },
                { name: 'eAN', realName: 'EAN' },
                { name: 'eANList', realName: 'EANList', type: 'EANList' },
                { name: 'edition', realName: 'Edition' },
                { name: 'eISBN', realName: 'EISBN', array: true },
                { name: 'energyEfficiencyClass', realName: 'EnergyEfficiencyClass' },
                { name: 'episodeSequence', realName: 'EpisodeSequence' },
                { name: 'eSRBAgeRating', realName: 'ESRBAgeRating' },
                { name: 'feature', realName: 'Feature', array: true },
                { name: 'format', realName: 'Format', array: true },
                { name: 'genre', realName: 'Genre' },
                { name: 'hardwarePlatform', realName: 'HardwarePlatform' },
                { name: 'hazardousMaterialType', realName: 'HazardousMaterialType' },
                { name: 'isAdultProduct', realName: 'IsAdultProduct' },
                { name: 'isAutographed', realName: 'IsAutographed' },
                { name: 'iSBN', realName: 'ISBN' },
                { name: 'isEligibleForTradeIn', realName: 'IsEligibleForTradeIn' },
                { name: 'isMemorabilia', realName: 'IsMemorabilia' },
                { name: 'issuesPerYear', realName: 'IssuesPerYear' },
                { name: 'itemDimensions', realName: 'ItemDimensions', type: 'ItemDimensions' },
                { name: 'itemPartNumber', realName: 'ItemPartNumber' },
                { name: 'label', realName: 'Label' },
                { name: 'languages', realName: 'Languages', type: 'Languages' },
                { name: 'legalDisclaimer', realName: 'LegalDisclaimer' },
                { name: 'listPrice', realName: 'ListPrice', type: 'Price' },
                { name: 'magazineType', realName: 'MagazineType' },
                { name: 'manufacturer', realName: 'Manufacturer' },
                { name: 'manufacturerMaximumAge', realName: 'ManufacturerMaximumAge', type: 'DecimalWithUnits' },
                { name: 'manufacturerMinimumAge', realName: 'ManufacturerMinimumAge', type: 'DecimalWithUnits' },
                { name: 'manufacturerPartsWarrantyDescription', realName: 'ManufacturerPartsWarrantyDescription' },
                { name: 'mediaType', realName: 'MediaType' },
                { name: 'model', realName: 'Model' },
                { name: 'modelYear', realName: 'ModelYear' },
                { name: 'mPN', realName: 'MPN' },
                { name: 'numberOfDiscs', realName: 'NumberOfDiscs' },
                { name: 'numberOfIssues', realName: 'NumberOfIssues' },
                { name: 'numberOfItems', realName: 'NumberOfItems' },
                { name: 'numberOfPages', realName: 'NumberOfPages' },
                { name: 'numberOfTracks', realName: 'NumberOfTracks' },
                { name: 'operatingSystem', realName: 'OperatingSystem' },
                { name: 'packageDimensions', realName: 'PackageDimensions', type: 'PackageDimensions' },
                { name: 'packageQuantity', realName: 'PackageQuantity' },
                { name: 'partNumber', realName: 'PartNumber' },
                { name: 'pictureFormat', realName: 'PictureFormat', array: true },
                { name: 'platform', realName: 'Platform', array: true },
                { name: 'productGroup', realName: 'ProductGroup' },
                { name: 'productTypeName', realName: 'ProductTypeName' },
                { name: 'productTypeSubcategory', realName: 'ProductTypeSubcategory' },
                { name: 'publicationDate', realName: 'PublicationDate' },
                { name: 'publisher', realName: 'Publisher' },
                { name: 'regionCode', realName: 'RegionCode' },
                { name: 'releaseDate', realName: 'ReleaseDate' },
                { name: 'seasonSequence', realName: 'SeasonSequence' },
                { name: 'runningTime', realName: 'RunningTime', type: 'DecimalWithUnits' },
                { name: 'seikodoProductCode', realName: 'SeikodoProductCode' },
                { name: 'size', realName: 'Size' },
                { name: 'sKU', realName: 'SKU' },
                { name: 'studio', realName: 'Studio' },
                { name: 'subscriptionLength', realName: 'SubscriptionLength', type: 'NonNegativeIntegerWithUnits' },
                { name: 'title', realName: 'Title' },
                { name: 'trackSequence', realName: 'TrackSequence' },
                { name: 'tradeInValue', realName: 'TradeInValue', type: 'Price' },
                { name: 'uPC', realName: 'UPC' },
                { name: 'uPCList', realName: 'UPCList', type: 'UPCList' },
                { name: 'warranty', realName: 'Warranty' },
                { name: 'wEEETaxValue', realName: 'WEEETaxValue', type: 'Price' }
            ]);
        };
    
        /**
         * Function containing information about discriminator values
         * mapped with their corresponding model class names
         *
         * @return   {object}  Object containing Key-Value pairs mapping discriminator
         *                     values with their corresponding model classes
         */
        ItemAttributes.prototype.discriminatorMap = function() {
            return {};
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {array|null}
         */
        ItemAttributes.prototype.getActor = function () {
            return this.actor;
        };
    
        /**
         * Setter for Actor
         * 
         * @param {array|null} value 
         */
        ItemAttributes.prototype.setActor = function (value) {
            this.actor = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {array|null}
         */
        ItemAttributes.prototype.getArtist = function () {
            return this.artist;
        };
    
        /**
         * Setter for Artist
         * 
         * @param {array|null} value 
         */
        ItemAttributes.prototype.setArtist = function (value) {
            this.artist = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getAspectRatio = function () {
            return this.aspectRatio;
        };
    
        /**
         * Setter for AspectRatio
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setAspectRatio = function (value) {
            this.aspectRatio = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {AudienceRatingEnum|null}
         */
        ItemAttributes.prototype.getAudienceRating = function () {
            return this.audienceRating;
        };
    
        /**
         * Setter for AudienceRating
         * 
         * @param {AudienceRatingEnum|null} value 
         */
        ItemAttributes.prototype.setAudienceRating = function (value) {
            this.audienceRating = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {array|null}
         */
        ItemAttributes.prototype.getAudioFormat = function () {
            return this.audioFormat;
        };
    
        /**
         * Setter for AudioFormat
         * 
         * @param {array|null} value 
         */
        ItemAttributes.prototype.setAudioFormat = function (value) {
            this.audioFormat = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {array|null}
         */
        ItemAttributes.prototype.getAuthor = function () {
            return this.author;
        };
    
        /**
         * Setter for Author
         * 
         * @param {array|null} value 
         */
        ItemAttributes.prototype.setAuthor = function (value) {
            this.author = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getBinding = function () {
            return this.binding;
        };
    
        /**
         * Setter for Binding
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setBinding = function (value) {
            this.binding = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getBrand = function () {
            return this.brand;
        };
    
        /**
         * Setter for Brand
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setBrand = function (value) {
            this.brand = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {CatalogNumberList|null}
         */
        ItemAttributes.prototype.getCatalogNumberList = function () {
            return this.catalogNumberList;
        };
    
        /**
         * Setter for CatalogNumberList
         * 
         * @param {CatalogNumberList|null} value 
         */
        ItemAttributes.prototype.setCatalogNumberList = function (value) {
            this.catalogNumberList = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {array|null}
         */
        ItemAttributes.prototype.getCategory = function () {
            return this.category;
        };
    
        /**
         * Setter for Category
         * 
         * @param {array|null} value 
         */
        ItemAttributes.prototype.setCategory = function (value) {
            this.category = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getCEROAgeRating = function () {
            return this.cEROAgeRating;
        };
    
        /**
         * Setter for CEROAgeRating
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setCEROAgeRating = function (value) {
            this.cEROAgeRating = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getClothingSize = function () {
            return this.clothingSize;
        };
    
        /**
         * Setter for ClothingSize
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setClothingSize = function (value) {
            this.clothingSize = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getColor = function () {
            return this.color;
        };
    
        /**
         * Setter for Color
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setColor = function (value) {
            this.color = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {array|null}
         */
        ItemAttributes.prototype.getCreator = function () {
            return this.creator;
        };
    
        /**
         * Setter for Creator
         * 
         * @param {array|null} value 
         */
        ItemAttributes.prototype.setCreator = function (value) {
            this.creator = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getDepartment = function () {
            return this.department;
        };
    
        /**
         * Setter for Department
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setDepartment = function (value) {
            this.department = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {array|null}
         */
        ItemAttributes.prototype.getDirector = function () {
            return this.director;
        };
    
        /**
         * Setter for Director
         * 
         * @param {array|null} value 
         */
        ItemAttributes.prototype.setDirector = function (value) {
            this.director = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getEAN = function () {
            return this.eAN;
        };
    
        /**
         * Setter for EAN
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setEAN = function (value) {
            this.eAN = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {EANList|null}
         */
        ItemAttributes.prototype.getEANList = function () {
            return this.eANList;
        };
    
        /**
         * Setter for EANList
         * 
         * @param {EANList|null} value 
         */
        ItemAttributes.prototype.setEANList = function (value) {
            this.eANList = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getEdition = function () {
            return this.edition;
        };
    
        /**
         * Setter for Edition
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setEdition = function (value) {
            this.edition = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {array|null}
         */
        ItemAttributes.prototype.getEISBN = function () {
            return this.eISBN;
        };
    
        /**
         * Setter for EISBN
         * 
         * @param {array|null} value 
         */
        ItemAttributes.prototype.setEISBN = function (value) {
            this.eISBN = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getEnergyEfficiencyClass = function () {
            return this.energyEfficiencyClass;
        };
    
        /**
         * Setter for EnergyEfficiencyClass
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setEnergyEfficiencyClass = function (value) {
            this.energyEfficiencyClass = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getEpisodeSequence = function () {
            return this.episodeSequence;
        };
    
        /**
         * Setter for EpisodeSequence
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setEpisodeSequence = function (value) {
            this.episodeSequence = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getESRBAgeRating = function () {
            return this.eSRBAgeRating;
        };
    
        /**
         * Setter for ESRBAgeRating
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setESRBAgeRating = function (value) {
            this.eSRBAgeRating = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {array|null}
         */
        ItemAttributes.prototype.getFeature = function () {
            return this.feature;
        };
    
        /**
         * Setter for Feature
         * 
         * @param {array|null} value 
         */
        ItemAttributes.prototype.setFeature = function (value) {
            this.feature = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {array|null}
         */
        ItemAttributes.prototype.getFormat = function () {
            return this.format;
        };
    
        /**
         * Setter for Format
         * 
         * @param {array|null} value 
         */
        ItemAttributes.prototype.setFormat = function (value) {
            this.format = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getGenre = function () {
            return this.genre;
        };
    
        /**
         * Setter for Genre
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setGenre = function (value) {
            this.genre = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getHardwarePlatform = function () {
            return this.hardwarePlatform;
        };
    
        /**
         * Setter for HardwarePlatform
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setHardwarePlatform = function (value) {
            this.hardwarePlatform = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getHazardousMaterialType = function () {
            return this.hazardousMaterialType;
        };
    
        /**
         * Setter for HazardousMaterialType
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setHazardousMaterialType = function (value) {
            this.hazardousMaterialType = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {bool|null}
         */
        ItemAttributes.prototype.getIsAdultProduct = function () {
            return this.isAdultProduct;
        };
    
        /**
         * Setter for IsAdultProduct
         * 
         * @param {bool|null} value 
         */
        ItemAttributes.prototype.setIsAdultProduct = function (value) {
            this.isAdultProduct = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {bool|null}
         */
        ItemAttributes.prototype.getIsAutographed = function () {
            return this.isAutographed;
        };
    
        /**
         * Setter for IsAutographed
         * 
         * @param {bool|null} value 
         */
        ItemAttributes.prototype.setIsAutographed = function (value) {
            this.isAutographed = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getISBN = function () {
            return this.iSBN;
        };
    
        /**
         * Setter for ISBN
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setISBN = function (value) {
            this.iSBN = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {bool|null}
         */
        ItemAttributes.prototype.getIsEligibleForTradeIn = function () {
            return this.isEligibleForTradeIn;
        };
    
        /**
         * Setter for IsEligibleForTradeIn
         * 
         * @param {bool|null} value 
         */
        ItemAttributes.prototype.setIsEligibleForTradeIn = function (value) {
            this.isEligibleForTradeIn = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {bool|null}
         */
        ItemAttributes.prototype.getIsMemorabilia = function () {
            return this.isMemorabilia;
        };
    
        /**
         * Setter for IsMemorabilia
         * 
         * @param {bool|null} value 
         */
        ItemAttributes.prototype.setIsMemorabilia = function (value) {
            this.isMemorabilia = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getIssuesPerYear = function () {
            return this.issuesPerYear;
        };
    
        /**
         * Setter for IssuesPerYear
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setIssuesPerYear = function (value) {
            this.issuesPerYear = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {ItemDimensions|null}
         */
        ItemAttributes.prototype.getItemDimensions = function () {
            return this.itemDimensions;
        };
    
        /**
         * Setter for ItemDimensions
         * 
         * @param {ItemDimensions|null} value 
         */
        ItemAttributes.prototype.setItemDimensions = function (value) {
            this.itemDimensions = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getItemPartNumber = function () {
            return this.itemPartNumber;
        };
    
        /**
         * Setter for ItemPartNumber
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setItemPartNumber = function (value) {
            this.itemPartNumber = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getLabel = function () {
            return this.label;
        };
    
        /**
         * Setter for Label
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setLabel = function (value) {
            this.label = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {Languages|null}
         */
        ItemAttributes.prototype.getLanguages = function () {
            return this.languages;
        };
    
        /**
         * Setter for Languages
         * 
         * @param {Languages|null} value 
         */
        ItemAttributes.prototype.setLanguages = function (value) {
            this.languages = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getLegalDisclaimer = function () {
            return this.legalDisclaimer;
        };
    
        /**
         * Setter for LegalDisclaimer
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setLegalDisclaimer = function (value) {
            this.legalDisclaimer = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {Price|null}
         */
        ItemAttributes.prototype.getListPrice = function () {
            return this.listPrice;
        };
    
        /**
         * Setter for ListPrice
         * 
         * @param {Price|null} value 
         */
        ItemAttributes.prototype.setListPrice = function (value) {
            this.listPrice = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getMagazineType = function () {
            return this.magazineType;
        };
    
        /**
         * Setter for MagazineType
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setMagazineType = function (value) {
            this.magazineType = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getManufacturer = function () {
            return this.manufacturer;
        };
    
        /**
         * Setter for Manufacturer
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setManufacturer = function (value) {
            this.manufacturer = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {DecimalWithUnits|null}
         */
        ItemAttributes.prototype.getManufacturerMaximumAge = function () {
            return this.manufacturerMaximumAge;
        };
    
        /**
         * Setter for ManufacturerMaximumAge
         * 
         * @param {DecimalWithUnits|null} value 
         */
        ItemAttributes.prototype.setManufacturerMaximumAge = function (value) {
            this.manufacturerMaximumAge = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {DecimalWithUnits|null}
         */
        ItemAttributes.prototype.getManufacturerMinimumAge = function () {
            return this.manufacturerMinimumAge;
        };
    
        /**
         * Setter for ManufacturerMinimumAge
         * 
         * @param {DecimalWithUnits|null} value 
         */
        ItemAttributes.prototype.setManufacturerMinimumAge = function (value) {
            this.manufacturerMinimumAge = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getManufacturerPartsWarrantyDescription = function () {
            return this.manufacturerPartsWarrantyDescription;
        };
    
        /**
         * Setter for ManufacturerPartsWarrantyDescription
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setManufacturerPartsWarrantyDescription = function (value) {
            this.manufacturerPartsWarrantyDescription = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getMediaType = function () {
            return this.mediaType;
        };
    
        /**
         * Setter for MediaType
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setMediaType = function (value) {
            this.mediaType = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getModel = function () {
            return this.model;
        };
    
        /**
         * Setter for Model
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setModel = function (value) {
            this.model = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int|null}
         */
        ItemAttributes.prototype.getModelYear = function () {
            return this.modelYear;
        };
    
        /**
         * Setter for ModelYear
         * 
         * @param {int|null} value 
         */
        ItemAttributes.prototype.setModelYear = function (value) {
            this.modelYear = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getMPN = function () {
            return this.mPN;
        };
    
        /**
         * Setter for MPN
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setMPN = function (value) {
            this.mPN = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int|null}
         */
        ItemAttributes.prototype.getNumberOfDiscs = function () {
            return this.numberOfDiscs;
        };
    
        /**
         * Setter for NumberOfDiscs
         * 
         * @param {int|null} value 
         */
        ItemAttributes.prototype.setNumberOfDiscs = function (value) {
            this.numberOfDiscs = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int|null}
         */
        ItemAttributes.prototype.getNumberOfIssues = function () {
            return this.numberOfIssues;
        };
    
        /**
         * Setter for NumberOfIssues
         * 
         * @param {int|null} value 
         */
        ItemAttributes.prototype.setNumberOfIssues = function (value) {
            this.numberOfIssues = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int|null}
         */
        ItemAttributes.prototype.getNumberOfItems = function () {
            return this.numberOfItems;
        };
    
        /**
         * Setter for NumberOfItems
         * 
         * @param {int|null} value 
         */
        ItemAttributes.prototype.setNumberOfItems = function (value) {
            this.numberOfItems = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int|null}
         */
        ItemAttributes.prototype.getNumberOfPages = function () {
            return this.numberOfPages;
        };
    
        /**
         * Setter for NumberOfPages
         * 
         * @param {int|null} value 
         */
        ItemAttributes.prototype.setNumberOfPages = function (value) {
            this.numberOfPages = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int|null}
         */
        ItemAttributes.prototype.getNumberOfTracks = function () {
            return this.numberOfTracks;
        };
    
        /**
         * Setter for NumberOfTracks
         * 
         * @param {int|null} value 
         */
        ItemAttributes.prototype.setNumberOfTracks = function (value) {
            this.numberOfTracks = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getOperatingSystem = function () {
            return this.operatingSystem;
        };
    
        /**
         * Setter for OperatingSystem
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setOperatingSystem = function (value) {
            this.operatingSystem = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {PackageDimensions|null}
         */
        ItemAttributes.prototype.getPackageDimensions = function () {
            return this.packageDimensions;
        };
    
        /**
         * Setter for PackageDimensions
         * 
         * @param {PackageDimensions|null} value 
         */
        ItemAttributes.prototype.setPackageDimensions = function (value) {
            this.packageDimensions = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int|null}
         */
        ItemAttributes.prototype.getPackageQuantity = function () {
            return this.packageQuantity;
        };
    
        /**
         * Setter for PackageQuantity
         * 
         * @param {int|null} value 
         */
        ItemAttributes.prototype.setPackageQuantity = function (value) {
            this.packageQuantity = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getPartNumber = function () {
            return this.partNumber;
        };
    
        /**
         * Setter for PartNumber
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setPartNumber = function (value) {
            this.partNumber = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {array|null}
         */
        ItemAttributes.prototype.getPictureFormat = function () {
            return this.pictureFormat;
        };
    
        /**
         * Setter for PictureFormat
         * 
         * @param {array|null} value 
         */
        ItemAttributes.prototype.setPictureFormat = function (value) {
            this.pictureFormat = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {array|null}
         */
        ItemAttributes.prototype.getPlatform = function () {
            return this.platform;
        };
    
        /**
         * Setter for Platform
         * 
         * @param {array|null} value 
         */
        ItemAttributes.prototype.setPlatform = function (value) {
            this.platform = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getProductGroup = function () {
            return this.productGroup;
        };
    
        /**
         * Setter for ProductGroup
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setProductGroup = function (value) {
            this.productGroup = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getProductTypeName = function () {
            return this.productTypeName;
        };
    
        /**
         * Setter for ProductTypeName
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setProductTypeName = function (value) {
            this.productTypeName = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getProductTypeSubcategory = function () {
            return this.productTypeSubcategory;
        };
    
        /**
         * Setter for ProductTypeSubcategory
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setProductTypeSubcategory = function (value) {
            this.productTypeSubcategory = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getPublicationDate = function () {
            return this.publicationDate;
        };
    
        /**
         * Setter for PublicationDate
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setPublicationDate = function (value) {
            this.publicationDate = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getPublisher = function () {
            return this.publisher;
        };
    
        /**
         * Setter for Publisher
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setPublisher = function (value) {
            this.publisher = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getRegionCode = function () {
            return this.regionCode;
        };
    
        /**
         * Setter for RegionCode
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setRegionCode = function (value) {
            this.regionCode = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getReleaseDate = function () {
            return this.releaseDate;
        };
    
        /**
         * Setter for ReleaseDate
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setReleaseDate = function (value) {
            this.releaseDate = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getSeasonSequence = function () {
            return this.seasonSequence;
        };
    
        /**
         * Setter for SeasonSequence
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setSeasonSequence = function (value) {
            this.seasonSequence = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {DecimalWithUnits|null}
         */
        ItemAttributes.prototype.getRunningTime = function () {
            return this.runningTime;
        };
    
        /**
         * Setter for RunningTime
         * 
         * @param {DecimalWithUnits|null} value 
         */
        ItemAttributes.prototype.setRunningTime = function (value) {
            this.runningTime = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getSeikodoProductCode = function () {
            return this.seikodoProductCode;
        };
    
        /**
         * Setter for SeikodoProductCode
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setSeikodoProductCode = function (value) {
            this.seikodoProductCode = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getSize = function () {
            return this.size;
        };
    
        /**
         * Setter for Size
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setSize = function (value) {
            this.size = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getSKU = function () {
            return this.sKU;
        };
    
        /**
         * Setter for SKU
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setSKU = function (value) {
            this.sKU = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getStudio = function () {
            return this.studio;
        };
    
        /**
         * Setter for Studio
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setStudio = function (value) {
            this.studio = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {NonNegativeIntegerWithUnits|null}
         */
        ItemAttributes.prototype.getSubscriptionLength = function () {
            return this.subscriptionLength;
        };
    
        /**
         * Setter for SubscriptionLength
         * 
         * @param {NonNegativeIntegerWithUnits|null} value 
         */
        ItemAttributes.prototype.setSubscriptionLength = function (value) {
            this.subscriptionLength = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getTitle = function () {
            return this.title;
        };
    
        /**
         * Setter for Title
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setTitle = function (value) {
            this.title = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getTrackSequence = function () {
            return this.trackSequence;
        };
    
        /**
         * Setter for TrackSequence
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setTrackSequence = function (value) {
            this.trackSequence = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {Price|null}
         */
        ItemAttributes.prototype.getTradeInValue = function () {
            return this.tradeInValue;
        };
    
        /**
         * Setter for TradeInValue
         * 
         * @param {Price|null} value 
         */
        ItemAttributes.prototype.setTradeInValue = function (value) {
            this.tradeInValue = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getUPC = function () {
            return this.uPC;
        };
    
        /**
         * Setter for UPC
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setUPC = function (value) {
            this.uPC = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {UPCList|null}
         */
        ItemAttributes.prototype.getUPCList = function () {
            return this.uPCList;
        };
    
        /**
         * Setter for UPCList
         * 
         * @param {UPCList|null} value 
         */
        ItemAttributes.prototype.setUPCList = function (value) {
            this.uPCList = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        ItemAttributes.prototype.getWarranty = function () {
            return this.warranty;
        };
    
        /**
         * Setter for Warranty
         * 
         * @param {string|null} value 
         */
        ItemAttributes.prototype.setWarranty = function (value) {
            this.warranty = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {Price|null}
         */
        ItemAttributes.prototype.getWEEETaxValue = function () {
            return this.wEEETaxValue;
        };
    
        /**
         * Setter for WEEETaxValue
         * 
         * @param {Price|null} value 
         */
        ItemAttributes.prototype.setWEEETaxValue = function (value) {
            this.wEEETaxValue = value;
        };
    
        return ItemAttributes;
    }

}(angular));
