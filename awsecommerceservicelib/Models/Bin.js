/**
 * AWSECommerceServiceLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of Bin
 *
 * @constructor
 */
angular.module('AWSECommerceServiceLib')
    .factory('Bin', ['BaseModel', BinModel]);

    function BinModel(BaseModel) {
        var Bin = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.binName = this.getValue(obj.binName);
            this.binItemCount = this.getValue(obj.binItemCount);
            this.binParameter = this.getValue(obj.binParameter);
        };

        Bin.prototype = new BaseModel();
        Bin.prototype.constructor = Bin;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        Bin.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                { name: 'binName', realName: 'BinName' },
                { name: 'binItemCount', realName: 'BinItemCount' },
                { name: 'binParameter', realName: 'BinParameter', array: true, type: 'BinParameter' }
            ]);
        };
    
        /**
         * Function containing information about discriminator values
         * mapped with their corresponding model class names
         *
         * @return   {object}  Object containing Key-Value pairs mapping discriminator
         *                     values with their corresponding model classes
         */
        Bin.prototype.discriminatorMap = function() {
            return {};
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        Bin.prototype.getBinName = function () {
            return this.binName;
        };
    
        /**
         * Setter for BinName
         * 
         * @param {string} value 
         */
        Bin.prototype.setBinName = function (value) {
            this.binName = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        Bin.prototype.getBinItemCount = function () {
            return this.binItemCount;
        };
    
        /**
         * Setter for BinItemCount
         * 
         * @param {int} value 
         */
        Bin.prototype.setBinItemCount = function (value) {
            this.binItemCount = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {array|null}
         */
        Bin.prototype.getBinParameter = function () {
            return this.binParameter;
        };
    
        /**
         * Setter for BinParameter
         * 
         * @param {array|null} value 
         */
        Bin.prototype.setBinParameter = function (value) {
            this.binParameter = value;
        };
    
        return Bin;
    }

}(angular));
