/**
 * AWSECommerceServiceLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of LoyaltyPoints
 *
 * @constructor
 */
angular.module('AWSECommerceServiceLib')
    .factory('LoyaltyPoints', ['BaseModel', LoyaltyPointsModel]);

    function LoyaltyPointsModel(BaseModel) {
        var LoyaltyPoints = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.points = this.getValue(obj.points);
            this.typicalRedemptionValue = this.getValue(obj.typicalRedemptionValue);
        };

        LoyaltyPoints.prototype = new BaseModel();
        LoyaltyPoints.prototype.constructor = LoyaltyPoints;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        LoyaltyPoints.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                { name: 'points', realName: 'Points' },
                { name: 'typicalRedemptionValue', realName: 'TypicalRedemptionValue', type: 'Price' }
            ]);
        };
    
        /**
         * Function containing information about discriminator values
         * mapped with their corresponding model class names
         *
         * @return   {object}  Object containing Key-Value pairs mapping discriminator
         *                     values with their corresponding model classes
         */
        LoyaltyPoints.prototype.discriminatorMap = function() {
            return {};
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int|null}
         */
        LoyaltyPoints.prototype.getPoints = function () {
            return this.points;
        };
    
        /**
         * Setter for Points
         * 
         * @param {int|null} value 
         */
        LoyaltyPoints.prototype.setPoints = function (value) {
            this.points = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {Price|null}
         */
        LoyaltyPoints.prototype.getTypicalRedemptionValue = function () {
            return this.typicalRedemptionValue;
        };
    
        /**
         * Setter for TypicalRedemptionValue
         * 
         * @param {Price|null} value 
         */
        LoyaltyPoints.prototype.setTypicalRedemptionValue = function (value) {
            this.typicalRedemptionValue = value;
        };
    
        return LoyaltyPoints;
    }

}(angular));
