/**
 * AWSECommerceServiceLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of TopItem
 *
 * @constructor
 */
angular.module('AWSECommerceServiceLib')
    .factory('TopItem', ['BaseModel', TopItemModel]);

    function TopItemModel(BaseModel) {
        var TopItem = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.aSIN = this.getValue(obj.aSIN);
            this.title = this.getValue(obj.title);
            this.detailPageURL = this.getValue(obj.detailPageURL);
            this.productGroup = this.getValue(obj.productGroup);
            this.author = this.getValue(obj.author);
            this.artist = this.getValue(obj.artist);
            this.actor = this.getValue(obj.actor);
        };

        TopItem.prototype = new BaseModel();
        TopItem.prototype.constructor = TopItem;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        TopItem.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                { name: 'aSIN', realName: 'ASIN' },
                { name: 'title', realName: 'Title' },
                { name: 'detailPageURL', realName: 'DetailPageURL' },
                { name: 'productGroup', realName: 'ProductGroup' },
                { name: 'author', realName: 'Author', array: true },
                { name: 'artist', realName: 'Artist', array: true },
                { name: 'actor', realName: 'Actor', array: true }
            ]);
        };
    
        /**
         * Function containing information about discriminator values
         * mapped with their corresponding model class names
         *
         * @return   {object}  Object containing Key-Value pairs mapping discriminator
         *                     values with their corresponding model classes
         */
        TopItem.prototype.discriminatorMap = function() {
            return {};
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        TopItem.prototype.getASIN = function () {
            return this.aSIN;
        };
    
        /**
         * Setter for ASIN
         * 
         * @param {string|null} value 
         */
        TopItem.prototype.setASIN = function (value) {
            this.aSIN = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        TopItem.prototype.getTitle = function () {
            return this.title;
        };
    
        /**
         * Setter for Title
         * 
         * @param {string|null} value 
         */
        TopItem.prototype.setTitle = function (value) {
            this.title = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        TopItem.prototype.getDetailPageURL = function () {
            return this.detailPageURL;
        };
    
        /**
         * Setter for DetailPageURL
         * 
         * @param {string|null} value 
         */
        TopItem.prototype.setDetailPageURL = function (value) {
            this.detailPageURL = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string|null}
         */
        TopItem.prototype.getProductGroup = function () {
            return this.productGroup;
        };
    
        /**
         * Setter for ProductGroup
         * 
         * @param {string|null} value 
         */
        TopItem.prototype.setProductGroup = function (value) {
            this.productGroup = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {array|null}
         */
        TopItem.prototype.getAuthor = function () {
            return this.author;
        };
    
        /**
         * Setter for Author
         * 
         * @param {array|null} value 
         */
        TopItem.prototype.setAuthor = function (value) {
            this.author = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {array|null}
         */
        TopItem.prototype.getArtist = function () {
            return this.artist;
        };
    
        /**
         * Setter for Artist
         * 
         * @param {array|null} value 
         */
        TopItem.prototype.setArtist = function (value) {
            this.artist = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {array|null}
         */
        TopItem.prototype.getActor = function () {
            return this.actor;
        };
    
        /**
         * Setter for Actor
         * 
         * @param {array|null} value 
         */
        TopItem.prototype.setActor = function (value) {
            this.actor = value;
        };
    
        return TopItem;
    }

}(angular));
