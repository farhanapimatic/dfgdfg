/**
 * AWSECommerceServiceLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of SearchIndex
 *
 * @constructor
 */
angular.module('AWSECommerceServiceLib')
    .factory('SearchIndex', ['BaseModel', SearchIndexModel]);

    function SearchIndexModel(BaseModel) {
        var SearchIndex = function (obj) {
            if (obj === undefined || obj === null) {
                return;
            }
            this.indexName = this.getValue(obj.indexName);
            this.relevanceRank = this.getValue(obj.relevanceRank);
            this.aSIN = this.getValue(obj.aSIN);
            this.results = this.getValue(obj.results);
            this.pages = this.getValue(obj.pages);
            this.correctedQuery = this.getValue(obj.correctedQuery);
        };

        SearchIndex.prototype = new BaseModel();
        SearchIndex.prototype.constructor = SearchIndex;
    
        /**
         * Function containing information about the fields of this model
         * @return   {array}   Array of objects containing information about the fields
         */
        SearchIndex.prototype.mappingInfo = function() {
            return BaseModel.prototype.mappingInfo.call(this).concat([
                { name: 'indexName', realName: 'IndexName' },
                { name: 'relevanceRank', realName: 'RelevanceRank' },
                { name: 'aSIN', realName: 'ASIN', array: true },
                { name: 'results', realName: 'Results' },
                { name: 'pages', realName: 'Pages' },
                { name: 'correctedQuery', realName: 'CorrectedQuery', type: 'CorrectedQuery' }
            ]);
        };
    
        /**
         * Function containing information about discriminator values
         * mapped with their corresponding model class names
         *
         * @return   {object}  Object containing Key-Value pairs mapping discriminator
         *                     values with their corresponding model classes
         */
        SearchIndex.prototype.discriminatorMap = function() {
            return {};
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {string}
         */
        SearchIndex.prototype.getIndexName = function () {
            return this.indexName;
        };
    
        /**
         * Setter for IndexName
         * 
         * @param {string} value 
         */
        SearchIndex.prototype.setIndexName = function (value) {
            this.indexName = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int}
         */
        SearchIndex.prototype.getRelevanceRank = function () {
            return this.relevanceRank;
        };
    
        /**
         * Setter for RelevanceRank
         * 
         * @param {int} value 
         */
        SearchIndex.prototype.setRelevanceRank = function (value) {
            this.relevanceRank = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {array}
         */
        SearchIndex.prototype.getASIN = function () {
            return this.aSIN;
        };
    
        /**
         * Setter for ASIN
         * 
         * @param {array} value 
         */
        SearchIndex.prototype.setASIN = function (value) {
            this.aSIN = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int|null}
         */
        SearchIndex.prototype.getResults = function () {
            return this.results;
        };
    
        /**
         * Setter for Results
         * 
         * @param {int|null} value 
         */
        SearchIndex.prototype.setResults = function (value) {
            this.results = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {int|null}
         */
        SearchIndex.prototype.getPages = function () {
            return this.pages;
        };
    
        /**
         * Setter for Pages
         * 
         * @param {int|null} value 
         */
        SearchIndex.prototype.setPages = function (value) {
            this.pages = value;
        };
    
        /**
         * TODO: Write general description for this method
         *
         * @return {CorrectedQuery|null}
         */
        SearchIndex.prototype.getCorrectedQuery = function () {
            return this.correctedQuery;
        };
    
        /**
         * Setter for CorrectedQuery
         * 
         * @param {CorrectedQuery|null} value 
         */
        SearchIndex.prototype.setCorrectedQuery = function (value) {
            this.correctedQuery = value;
        };
    
        return SearchIndex;
    }

}(angular));
